name: CI Pipeline

on:
  push:
    branches:
      - main
      - 'release/**'
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Install dependencies
        run: go mod tidy

      - name: Run tests
        run: go test ./...

  build:
    name: Build and Release
    needs: test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Build
        run: |
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o build/k8run-${{ matrix.os }}-${{ matrix.arch }} .

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: k8run-${{ matrix.os }}-${{ matrix.arch }}
          path: build/k8run-${{ matrix.os }}-${{ matrix.arch }}

  release:
    name: Create GitHub Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: build/

      - name: Set release tag
        run: echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          name: Release ${{ env.RELEASE_TAG }}
          draft: false
          prerelease: false
          files: |
            build/k8run-linux-amd64
            build/k8run-linux-arm64
            build/k8run-windows-amd64.exe
            build/k8run-windows-arm64.exe
            build/k8run-darwin-amd64
            build/k8run-darwin-arm64